services:
  - name: backend
    type: web
    env: node
    buildCommand: npm install
    startCommand: npm start
    diskSize: 512
    plan: starter

  - name: frontend
    type: web
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm run start
    diskSize: 512
    plan: starter

  - name: nginx
    type: web
    env: nginx
    startCommand: nginx -g 'daemon off;'
    nginxConfig: |
      worker_processes auto;
      events {}

      http {
        include mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        server {
          listen 80;
          server_name localhost;

          location / {
            proxy_pass http://frontend:5173;  # Adjust to match your frontend service name
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }

          location /api/ {
            proxy_pass https://buds-of-boston.onrender.com;  # Adjust to match your backend service name
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }
        }
      }
    ports:
      - 80:80
    diskSize: 512
    plan: starter
